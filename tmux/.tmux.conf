# Our .tmux.conf file

# Setting the prefix from C-b to C-a
# START:prefix
set -g prefix C-a  
# END:prefix
# Free the original Ctrl-b prefix keybinding
# START:unbind
unbind C-b 
# END:unbind
#setting the delay between prefix and command
# START:delay
set -s escape-time 2
# END:delay
# Ensure that we can send Ctrl-A to other apps
# START:bind_prefix
bind C-a send-prefix
# END:bind_prefix

# Set the base index for windows to 1 instead of 0
# START:index
set -g base-index 1
# END:index

# Set the base index for panes to 1 instead of 0
# START:panes_index
setw -g pane-base-index 1
# END:panes_index

# Reload the file with Prefix r
# START:reload
bind r source-file ~/.tmux.conf \; display "Reloaded!"
# END:reload

# splitting panes
# START:panesplit
bind c new-window -c "#{pane_current_path}"
# END:panesplit

# splitting panes
# START:panesplit
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
# END:panesplit

# moving between panes
# START:paneselect
#bind h select-pane -L 
#bind j select-pane -D 
#bind k select-pane -U
#bind l select-pane -R    
# END:paneselect

# Quick pane selection
# START:panetoggle
#bind -r C-h select-window -t :-
#bind -r C-l select-window -t :+
# END:panetoggle
# 

# Pane resizing
# START:paneresize
bind -r H resize-pane -L 5 
bind -r J resize-pane -D 5 
bind -r K resize-pane -U 5 
bind -r L resize-pane -R 5
#esto hace que se estire o se achique en funcion del cliente que se atachio'
setw -g aggressive-resize on
# END:paneresize
# mouse support - set to on if you want to use the mouse
## START:mouse
#setw -g mode-mouse off 
## END:mouse
#set -g mouse-select-pane off 
#set -g mouse-resize-pane off 
#set -g mouse-select-window off

# Set the default terminal mode to 256color mode
# START:termcolor
set -g default-terminal "xterm"
#set -g default-terminal "xterm-256color"
#set -g default-terminal "screen-256color"
# END:termcolor

# enable activity alerts
#START:activity
setw -g monitor-activity on
set -g visual-activity on
#END:activity

# set the status line's colors
# START:statuscolor
set -g status-fg white
set -g status-bg black
# END:statuscolor

# set the color of the window list
# START:windowstatuscolor
setw -g window-status-fg cyan 
setw -g window-status-bg default 
setw -g window-status-attr dim
# END:windowstatuscolor

# set colors for the active window
# START:activewindowstatuscolor
setw -g window-status-current-fg white 
setw -g window-status-current-bg red 
setw -g window-status-current-attr bright
# END:activewindowstatuscolor

# pane colors
# START:panecolors
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow
# END:panecolors

# Command / message line
# START:cmdlinecolors
set -g message-fg white
set -g message-bg black
set -g message-attr bright
# END:cmdlinecolors

# Status line left side
# START:statusleft
set -g status-left-length 40 
set -g status-left "#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P"
# END:statusleft

#START:utf8
#set -g status-utf8 on
#END:utf8

# Status line right side
# 15% | 28 Nov 18:15
# START: statusright
set -g status-right "#[fg=cyan]%d %b %R"
# END:statusright

# Update the status bar every sixty seconds
# START:updateinterval
set -g status-interval 60
# END:updateinterval

# Center the window list
# START:centerwindowlist
set -g status-justify centre
# END:centerwindowlist

# ienable lock
# SSTART:enable_lock
#set-option -g lock-command "/usr/bin/cmatrix -s -b -C green -u 9"
set-option -g lock-command "/usr/local/bin/unimatrix -b -c green -f -l knaAS -s 44"
#set-option -g lock-command cmatrix -b
#set-option -g lock-server on
set-option -g lock-after-time 1000
bind -r C-x lock-server
# EEND:enable_lock

# enable vi keys.
# START:vikeys
setw -g mode-keys vi
# END:vikeys
 
# enable vi keys.
# START:vikeys
bind-key h choose-window 'join-pane -v -s "%%"'
bind-key v choose-window 'join-pane -h -s "%%"'

bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'" 
bind-key s command-prompt -p "send pane to:"    "join-pane -t '%%'"
# END:vikeys

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
bind C-l send-keys 'C-l' #para borrar pantalla con C-a C-l porque el C-l lo tengo bindeado a cambiar de panel
